@startuml

title Bet-67 Backend

hide empty attributes
hide empty methods

abstract class User <Entity> <<abstract>> {
    userName : UserName
    firstName : FirstName
    lastName : LastName
    email : Email
    password: Password <<nn, encrypted>>
    phoneNumber: PhoneNumber <<Nullable>>
    creationTS: ZonedDateTime
    credit: Integer
}

class PhoneNumber <Value Object> <<Embeddable>> {
    reportedCountry: Country
    number: Integer
}

entity Customer <Entity> extends User{
    paymentInformation : PaymentInformation <<nn>>
}

entity Bet <Entity> {
    placedOn : Match
    placer : Customer
    type : String
    amount : Integer <<max: 1000 Euro>>
    placedDate: ZonedDateTime
    expectedWinner: Bettable
}

entity Match <Entity> {
    sport : Sport <<has to be supported by Arena>>
    teams : List<Bettable> <<length bigger 2, nn>>
    stats : List<Stat> <<nn, length = teams.length>>
    date : ZonedDateTime
    winner : Bettable
    arena: Arena <<nn>>
}

class Stat <Value Object> <<Embeddable>> {
    for: Bettable <<nn>>
    in: Match <<nn>>
    quote: Float <<nn, bigger 1.0>>
    score: Float <<nn>>
}

entity Arena <Entity> {
    name: String
    type: ArenaType
    location: Location
    possibleSports: List<Sport>
}

class Location <Value Object> <<Embeddable>> {
    longitude: Longitude
    latitude: Latitude
}

abstract class Bettable <Entity> <<abstract>> {
    name: String
    nextMatchDate: ZonedDateTime
}

entity Team <Entity> extends Bettable{
    sports: List<Sport>
}

entity Athlete <Entity> extends Bettable{
    mainSport: Sport
    additionalSports: List<Sport> <<Nullable>>
    team: Team <<Nullable>>
}

class PaymentInformation <Value Object>  <<Embeddable>> {
    cardNumber : String
    iban : Iban
    reportedCountry : Country
    expirationDate : ZonedDateTime
}

entity Country <Entity> {
    countryName : String
    iso2Code : String
    iso3Code : String
    countryCode : Integer
}

enum Sport <Enum> {
    FOOTBALL,
    BASKETBALL,
    BOXING,
    MMA,
    TENNIS,
    CHESS,
    GOLF
    ...
}

class Profile <Value Object> <<Embeddable>> {
    picture: Picture
    wlRatio: Float
    statsPerMatch: List<Stats>
    league: League
}

class League <Value Object> <<Embeddable>> {
    name: String
    division: Integer
}

class Picture <Value Object> <<Embeddable>> {
    image: String
    pWidth: Integer
    pHeight: Integer
    nrChannels: Integer
}

class AthleteProfile <Value Object> <<Embeddable>> {
    nationality: Country
    height: Float
    weight: Float
    age: Integer
}

'!include rich_types.puml

Bet "1" --* "0..n" Customer
Customer "1..n" *-- "1" PaymentInformation
PaymentInformation "1" -left> "0..n" Country
PhoneNumber "1" --> "0..n" Country
Bet "1" --* "0..n" Match
Match "2" -> "0..n" Bettable
Match "1" -> "0..n" Arena
Arena "1" *-- "1" Location
Team "1..n" --> Sport
Athlete "1..n" --> Sport
Match "1" --> Sport
Arena "1..n" -> Sport
User "0..1" --> "1" PhoneNumber
Athlete "0..1" -o "2..n" Team
Stat "1" --* "1..n" Match
Stat "1" --> "1" Bettable
Profile "1" *-- "1" Picture
Profile "1" -> "0..n" League
Bettable "1" *- "1" Profile
Athlete "1" *-- "1" AthleteProfile

@enduml